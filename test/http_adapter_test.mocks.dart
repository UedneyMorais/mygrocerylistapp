// Mocks generated by Mockito 5.0.17 from annotations
// in mygrocerylist/test/http_adapter_test.dart.
// Do not manually edit this file.

import 'package:mockito/mockito.dart' as _i1;
import 'package:mygrocerylist/application/infrastructure/http/use_cases/http_adapter_x.dart'
    as _i3;
import 'package:mygrocerylist/env/env.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEndpoints_0 extends _i1.Fake implements _i2.Endpoints {}

/// A class which mocks [HttpAdapter].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpAdapter extends _i1.Mock implements _i3.HttpAdapter {
  MockHttpAdapter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Endpoints get endpoints =>
      (super.noSuchMethod(Invocation.getter(#endpoints),
          returnValue: _FakeEndpoints_0()) as _i2.Endpoints);
  @override
  set endpoints(_i2.Endpoints? _endpoints) =>
      super.noSuchMethod(Invocation.setter(#endpoints, _endpoints),
          returnValueForMissingStub: null);
  @override
  dynamic delete({String? uri, Map<String, String>? headers}) =>
      super.noSuchMethod(
          Invocation.method(#delete, [], {#uri: uri, #headers: headers}));
  @override
  dynamic get(
          {String? uri,
          Map<String, String>? headers,
          Map<String, dynamic>? parameters}) =>
      super.noSuchMethod(Invocation.method(
          #get, [], {#uri: uri, #headers: headers, #parameters: parameters}));
  @override
  dynamic patch({Uri? uri, Map<String, String>? headers, Object? body}) =>
      super.noSuchMethod(Invocation.method(
          #patch, [], {#uri: uri, #headers: headers, #body: body}));
  @override
  dynamic post({String? uri, Map<String, String>? headers, Object? body}) =>
      super.noSuchMethod(Invocation.method(
          #post, [], {#uri: uri, #headers: headers, #body: body}));
  @override
  dynamic put({String? uri, Map<String, String>? headers, Object? body}) =>
      super.noSuchMethod(Invocation.method(
          #put, [], {#uri: uri, #headers: headers, #body: body}));
}
